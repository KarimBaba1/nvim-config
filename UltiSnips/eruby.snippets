extends html
# TextMate added these variables to cope with changes in ERB handling
# in different versions of Rails -- for instance, Rails 3 automatically
# strips whitespace so that it's no longer necessary to use a form like
# <% end -%>, but if you're still maintaining Rails 2 projects, you
# can't omit the minus sign and get the same behavior.
#
# The following regex replace substitutes the function below for the
# TextMate variable references after the snippets are converted:
#
#   /\v\$\{(TM_RAILS_TEMPLATE_([^_]+)_RUBY_([^_\s]+))\}/`!p textmate_var('\1', snip)`/g
#
global !p
def textmate_var(var, snip):
    lookup = dict(
       TM_RAILS_TEMPLATE_START_RUBY_EXPR = snip.opt('g:tm_rails_template_start_ruby_expr', '<%= '),
       TM_RAILS_TEMPLATE_END_RUBY_EXPR = snip.opt('g:tm_rails_template_end_ruby_expr', ' %>'),
       TM_RAILS_TEMPLATE_START_RUBY_INLINE = snip.opt('g:tm_rails_template_start_ruby_inline', ' %>'),
       TM_RAILS_TEMPLATE_END_RUBY_INLINE = snip.opt('g:tm_rails_template_end_ruby_inline', ' %>'),
       TM_RAILS_TEMPLATE_END_RUBY_BLOCK = 'end'
    )

    snip.rv = lookup[var]
    return
endglobal


###########################################################################
#            GENERATED FROM get_tm_snippets.py + REGEX REPLACE            #
###########################################################################

snippet fi "<%= Fixtures.identify(:symbol) %>"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`Fixtures.identify(:${1:name})`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`$0
endsnippet

snippet end "end (ERB)"
<%- end -%>
endsnippet

snippet for "for loop (ERB)"
<% if !${1:list}.blank? %>
  <% for ${2:item} in ${1} %>
    $3
  <% end %>
<% else %>
  $4
<% end %>

endsnippet

snippet ffcb "form_for check_box"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.check_box :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet ffff "form_for file_field 2"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.file_field :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet ffhf "form_for hidden_field 2"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.hidden_field :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet ffl "form_for label 2"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR}f.label :${1:attribute', snip)`${2:, "${3:${1/[[:alpha:]]+|(_)/(?1: :\u$0)/g}}"}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet ffpf "form_for password_field 2"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.password_field :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet ffrb "form_for radio_box 2"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.radio_box :${1:attribute}, :${2:tag_value}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet ffs "form_for submit 2"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.submit "${1:Submit}"${2:, :disable_with => '${3:$1ing...}'}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet ffta "form_for text_area 2"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.text_area :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet fftf "form_for text_field 2"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.text_field :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet fields "fields_for"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_INLINE', snip)`fields_for :${1:model}, @${2:$1} do |$1|`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_INLINE', snip)`
  $0
`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_BLOCK', snip)`
endsnippet

snippet f. "f_fields_for (nff)"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_INLINE', snip)`f.fields_for :${1:attribute} do |${2:f}|`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_INLINE', snip)`
	$0
`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_BLOCK', snip)`
endsnippet

snippet f. "f.checkbox"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.check_box :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet f. "f.file_field"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.file_field :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet f. "f.hidden_field"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.hidden_field :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet f. "f.label"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR}f.label :${1:attribute', snip)`${2:, "${3:${1/[[:alpha:]]+|(_)/(?1: :\u$0)/g}}"}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet f. "f.password_field"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.password_field :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet f. "f.radio_box"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.radio_box :${1:attribute}, :${2:tag_value}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet f. "f.submit"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.submit "${1:Submit}"${2:, :disable_with => '${3:$1ing...}'}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet f. "f.text_area"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.text_area :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet f. "f.text_field"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`f.text_field :${1:attribute}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet ffe "form_for with errors"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`error_messages_for :${1:model}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`

`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_INLINE', snip)`form_for @${2:$1} do |f|`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_INLINE', snip)`
  $0
`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_BLOCK', snip)`
endsnippet

snippet ff "form_for"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_INLINE', snip)`form_for @${1:model} do |f|`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_INLINE', snip)`
  $0
`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_BLOCK', snip)`
endsnippet

snippet ist "image_submit_tag"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`image_submit_tag("${1:agree.png}"${2:${3:, :id => "${4:${1/^(\w+)(\.\w*)?$/$1/}}"}${5:, :name => "${6:${1/^(\w+)(\.\w*)?$/$1/}}"}${7:, :class => "${8:${1/^(\w+)(\.\w*)?$/$1/}-button}"}${9:, :disabled => ${10:false}}})`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet it "image_tag"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`image_tag "$1${2:.png}"${3:${4:, :title => "${5:title}"}${6:, :class => "${7:class}"}}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet layout "layout"
layout "${1:template_name}"${2:${3:, :only => ${4:[:${5:action}, :${6:action}]}}${7:, :except => ${8:[:${9:action}, :${10:action}]}}}
endsnippet

snippet jit "javascript_include_tag"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`javascript_include_tag ${1::all}${2:, :cache => ${3:true}}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet lia "link_to (action)"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to "${1:link text...}", :action => "${2:index}"`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet liai "link_to (action, id)"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to "${1:link text...}", :action => "${2:edit}", :id => ${3:@item}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet lic "link_to (controller)"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to "${1:link text...}", :controller => "${2:items}"`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet lica "link_to (controller, action)"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to "${1:link text...}", :controller => "${2:items}", :action => "${3:index}"`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet licai "link_to (controller, action, id)"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to "${1:link text...}", :controller => "${2:items}", :action => "${3:edit}", :id => ${4:@item}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet linpp "link_to (nested path plural)"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to ${1:"${2:link text...}"}, ${3:${10:parent}_${11:child}_path(${12:@}${13:${10}})}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet linp "link_to (nested path)"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to ${1:"${2:link text...}"}, ${3:${12:parent}_${13:child}_path(${14:@}${15:${12}}, ${16:@}${17:${13}})}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet lipp "link_to (path plural)"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to ${1:"${2:link text...}"}, ${3:${4:model}s_path}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet lip "link_to (path)"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to ${1:"${2:link text...}"}, ${3:${12:model}_path(${13:@}${14:${12}})}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet lim "link_to model"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to ${1:model}.${2:name}, ${3:${4:$1}_path(${14:$1})}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet hide "page.hide (*ids)"
page.hide ${1:"${2:id(s)}"}
endsnippet

snippet ins "page.insert_html (position, id, partial)"
page.insert_html :${1:top}, ${2:"${3:id}"}, :${4:partial => "${5:template}"}
endsnippet

snippet rep "page.replace (id, partial)"
page.replace ${1:"${2:id}"}, :${3:partial => "${4:template}"}
endsnippet

snippet reph "page.replace_html (id, partial)"
page.replace_html ${1:"${2:id}"}, :${3:partial => "${4:template}"}
endsnippet

snippet show "page.show (*ids)"
page.show ${1:"${2:id(s)}"}
endsnippet

snippet tog "page.toggle (*ids)"
page.toggle ${1:"${2:id(s)}"}
endsnippet

snippet vis "page.visual_effect (effect, id)"
page.visual_effect :${1:toggle_slide}, ${2:"${3:DOM ID}"}
endsnippet

snippet rp "render (partial) (rp)"
render :partial => "${1:item}"
endsnippet

snippet rpc "render (partial,collection) (rpc)"
render :partial => "${1:item}", :collection => ${2:@$1s}
endsnippet

snippet rpl "render (partial,locals) (rpl)"
render :partial => "${1:item}", :locals => { :${2:$1} => ${3:@$1}$0 }
endsnippet

snippet rpo "render (partial,object) (rpo)"
render :partial => "${1:item}", :object => ${2:@$1}
endsnippet

snippet rps "render (partial,status) (rps)"
render :partial => "${1:item}", :status => ${2:500}
endsnippet

snippet slt "stylesheet_link_tag"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`stylesheet_link_tag ${1::all}${2:, :cache => ${3:true}}`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet else "else (ERB)"
<%- else -%>
  $0
endsnippet

snippet if "if (ERB)"
<%- if $0 -%>
	${VISUAL}
<%- end -%>
endsnippet

snippet elsif "elsif" b
<%- elsif $0 -%>
endsnippet

snippet lf "link_to_function"
`!p textmate_var('TM_RAILS_TEMPLATE_START_RUBY_EXPR', snip)`link_to_function ${1:"${2:Greeting}"}, "${3:alert('Hello world!')}"$4`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_EXPR', snip)`
endsnippet

snippet <%- "open" b
<%- ${0:${VISUAL}} -%>
endsnippet

snippet '<%=' "open return" r
<%= ${0:${VISUAL}} %>
endsnippet

snippet } "close tab" b
<%- } -%>$0
endsnippet

# vim:ft=snippets:



snippet bug "debugger" b
<%-
	unless @no_debug
		require 'debugger'
		\`wmctrl -a 'Rackup `pwd | awk -F/ '{print $(NF-1)}'`'\`
		debugger
		true
	end
-%>
endsnippet

snippet debug "debugger" b
<%- require 'debugger' ; \`wmctrl -a 'loper tmux'\` ; debugger; true -%>
endsnippet

snippet olddebug "debug in ruby 1.8" b
<%-
	unless @no_debug
		require 'rubygems'
		require 'ruby-debug'
		debugger
		true
	end
-%>
endsnippet

snippet each "each" b
<%- $1.each { |${2:o}| -%>
  ${VISUAL}
<%- } -%>
endsnippet

snippet 'config' "erb config item" r
<%=config["${1:general}"][0]["$0"]${2:.inspect}%>
endsnippet

snippet 'ccc' "ccc" r
<%=c["$0"]${1:.inspect}%>
endsnippet

snippet /i_/ "icon" r
<div class="i_$0"></div>
endsnippet

#snippet /i18/ "i18n translate" r
#<%=t "${VISUAL/(.*)/\L$0\E/g}$0"%>
#endsnippet

snippet /i18/ "i18n translate" r
<%=i18 "$0/${VISUAL/(.*)/\L$0\E/g}"%>
endsnippet

snippet /i18l/ "i18n translate from locales" r
<%=i18 "locales/${VISUAL/(.*)/$0\L\E/g}"%>
endsnippet

snippet wrap "div wrapper" b
<div class="$0">
${VISUAL}
</div>
endsnippet

snippet radio "Radio button" b
<input type="radio" name="$1" value="$2"> $0<br>
endsnippet



snippet times "times do" b
<%- $1.times { |i| -%>
	$0
<%- } -%>
endsnippet

snippet erb "render partial" b
<%= erb :"${1:toppy}/${2:main}/${3:_partial1}"${0:, locals: {}} %>
endsnippet

snippet /<b/ "b tag" r
<b>${0:${VISUAL}}</b>
endsnippet

snippet ft "form tag" b
<%= form_tag(${1:path},
	method: :put,
	role: "form",
	class: "form-horizontal",
) do %>
<%- end -%>
endsnippet

snippet imgp "ruby test 1" b
`ruby -e 'puts ENV["STAGE"]'`
endsnippet

snippet pimg "public image" b
<img src="/images/`cat ~/.loper-stage`/${1:logo.png}">
endsnippet

snippet nos "noscript" b
<noscript>
  $0
</noscript>
endsnippet

snippet # "comment" b
<!-- $0 -->
endsnippet

snippet pry "pry remote" b
<% \`sh -c focus-pry\` and binding.remote_pry %>
endsnippet

snippet pryb "pry block" b
<% require 'pry'; binding.pry %>
endsnippet

snippet pj "pj" b
<%= pj($0) %>
endsnippet

snippet tac "text align right"
style="text-align:right"
endsnippet

snippet st "style"
style="$0"
endsnippet

snippet hinput "hidden input" b
<input type="hidden" name="$1" value="$0">
endsnippet

snippet hinput "hidden inputs App360 helper" b
<%= hidden_inputs(
	'change_request[request_type]' => 'manage_network',
	'change_request[action]' => 'acquire_ip',
) %>
endsnippet

snippet next "next if" b
<%- next if $0 -%>
endsnippet

snippet /void0/ "javascript:void(0)" r
javascript:void(0)
endsnippet

snippet hrif "hr if" b
<%= raw '<hr />' if i>0 %>
endsnippet

snippet hc "html comment" b
<!-- $0 -->
endsnippet

snippet dropdown "BS3 dropdown button"
<div class="dropdown">
	<a id="dLabel" data-target="#" href="http://example.com"
		data-toggle="dropdown" aria-haspopup="true"
		role="button" aria-expanded="false">
		Dropdown trigger
		<span class="caret"></span>
	</a>
	<ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
		<li role="presentation" class="dropdown-header">Dropdown header</li>
		<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Action 1</a></li>
		<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Action 2</a></li>

		<li role="presentation" class="divider"></li>

		<li role="presentation" class="dropdown-header">Dropdown header</li>
		<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Action 3</a></li>
		<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Action 4</a></li>
	</ul>
</div>
endsnippet

snippet form-group "form-group" b
<div class="form-group">
	<label for="${1:ID}">${2:Label}</label>
	<div class="relative">
		<input type="text" class="form-control" id="$1"
			name="$1"
			value="<%= $1 %>"
			${3:required="required"}
			${4:placeholder="e.g. MACD"}
			${5:data-parsley-pattern=""
			data-parsley-pattern-message="At least 3 characters, allow alphanumberic, space and underscore."}
		>
	</div>
</div>
endsnippet

snippet form_control "static" b
<%= form_control(
	label: "My Name", type: :static,
	value: "Loki",
	desc: "Display a static text only"
) %>
endsnippet

snippet form_control "text" b
<%= form_control(
	label: "Host", type: :text,
	input: {
		maxlength: 255,
		name: 'server_config[host]',
		placeholder: "e.g. 192.168.1.2",
		value: config[:host],
	},
) %>
endsnippet

snippet form_control "submit" b
<%= form_control(
	label: "", type: :submit,
	value: '<i class="icon-ok"></i> Submit',
	backurl: "/",
	backbtn: {
		label: 'Cancel',
		"data-toggle" => ".xxx",
	},
) %>
endsnippet

snippet form_control "select" b
<%= form_control(
	label: "Gender", type: :select,
	select: {
		name: 'server_config[gender]',
		options: ["Male", "Female"],
		selected: "Female",
	},
) %>
endsnippet

snippet form_control "image" b
<%= form_control(
	label: "Avatar", type: :img_upload,
	img_upload: {
		value: "http://www.gravatar.com/avatar/97a6833eebb90d9e8c4638d6624c78d8",
	}
) %>
endsnippet

snippet crbtn "change request btn" b
<%= change_request_btn(
	data: {
		'change_request[request_type]' => 'manage_network',
		'change_request[action]' => 'acquire_ip_for_static_nat',
		'change_request[network_uuid]' => nic['network_uuid'],
	},
	confirm: 'Are you sure to acquire public IP for this VM?',
	icon: 'plus',
	label: "Acquire Public IP for Static NAT",
	btn_class: 'btn btn-sm btn-primary',
	clone_from: '...',
) %>
endsnippet

snippet unless "unless" b
<%- unless $0 -%>

<%- end -%>
endsnippet

snippet btn-form "button form" b
<form action="<%= create_playbook_path %>" method="post"
	id="create-playbook" accept-charset="utf-8"
	style="display: inline-block">
	<a href="javascript:void(0)" data-trigger-submit="#create-playbook" class="btn btn-default">
		<i class="icon-plus"></i>
		Create New Playbook
	</a>
</form>
endsnippet

snippet navy_post_btn "navy post btn" b
<%= navy_post_btn(
	path: playbook_delete_service_path(
		uuid: playbook['uuid'],
		service_uuid: uuid,
	),
	aimed: ".services-content",
	confirm: "Are you sure to delete this service?",
	icon: 'trash',
	btn_label: 'delete service',
	btn_class: "btn-danger delete-service",
) %>
endsnippet


snippet todo "todo" b
<!-- @TODO loki, `date +"%d/%m/%Y"`: $0 -->
endsnippet

snippet fixme "fixme" b
<!-- @FIXME loki, `date +"%d/%m/%Y"`: $0 -->
endsnippet

snippet /prefix/ "prefix path" r
<%= prefix_path("${VISUAL}") %>
endsnippet

snippet phimg "placeholder img" b
<img src="https://via.placeholder.com/350x350/eee/bbb?text=" />
endsnippet

snippet iffalse "if false" b
<%- if false -%>
	${VISUAL}
<%- end -%>
endsnippet

snippet svg "svg" b
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1280 720">
</svg>
endsnippet
